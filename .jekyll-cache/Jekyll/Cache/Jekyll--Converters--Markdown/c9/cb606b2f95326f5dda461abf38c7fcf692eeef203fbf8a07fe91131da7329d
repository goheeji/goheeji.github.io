I"G<h1 id="function">function</h1>
<h2 id="함수란-무엇인가요">함수란 무엇인가요?</h2>
<p><strong>함수 (function)</strong></p>

<ul>
  <li>
    <p>하나의 기능을 수행하는 일련의 코드</p>
  </li>
  <li>
    <p>함수는 호출하여 사용하고 기능이 수행된 후 값을 반환 할 수 있음</p>
  </li>
  <li>
    <p>함수로 구현된 기능은 여러 곳에서 호출되어 사용 될 수 있음</p>
  </li>
  <li>
    <p>함수를 쓰는 것을 “함수를 호출한다”라고 한다.</p>
  </li>
  <li>
    <p>이 결과를 나를 호출해준 함수에 돌려준다 라는것은 반환 값을 리턴할 수 있다는 것.</p>
  </li>
</ul>

<p><strong>함수(function)의 장점</strong></p>

<ul>
  <li>
    <p>코드의 재사용 가능</p>
  </li>
  <li>
    <p>기능이 분리되어있기 때문에 가독성이 좋다.</p>
  </li>
  <li>
    <p>함수를 나누어서 코딩을 하게되면 디버깅, 코드 업데이트, 버전업을 할때 유용하다.</p>
  </li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>요약: 함수는 분리되어있고 호출해서 사용한다.
</code></pre></div></div>

<h2 id="함수의-입력과-반환">함수의 입력과 반환</h2>

<p><img src="https://github.com/goheeji/TIL/blob/master/JAVA/function.png" alt="Alt text" /></p>

<p>들어가는 값을 매개변수라고하며 결과값을 반환값이라고한다.</p>

<p>매개변수, 함수, 반환값이 함수의 요소지만 함수에 따라서 매개변수, 반환값이 없을수도 있다.</p>

<h2 id="함수-정의-하기">함수 정의 하기</h2>
<p>함수는 이름, 매개변수, 반환 값, 함수 몸체(body)로 구성됨</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kt">int</span> <span class="nf">add</span><span class="o">(</span><span class="kt">int</span> <span class="n">num1</span><span class="o">,</span> <span class="kt">int</span> <span class="n">num2</span><span class="o">){</span> <span class="c1">//만약에 반환되는 값이 없다면 void 라고 하기 반환값의 타입, 함수이름, 매개변수</span>

<span class="kt">int</span> <span class="n">result</span><span class="o">;</span>
<span class="n">result</span> <span class="o">=</span> <span class="n">num1</span> <span class="o">+</span> <span class="n">num2</span><span class="o">;</span>
<span class="k">return</span> <span class="n">result</span><span class="o">;</span>
<span class="o">}</span>
</code></pre></div></div>

<h2 id="실제-코드-쳐보기">실제 코드 쳐보기</h2>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">package</span> <span class="nn">classpart</span><span class="o">;</span>

<span class="kd">public</span> <span class="kd">class</span> <span class="nc">FuctionTest</span> <span class="o">{</span>

	<span class="kd">public</span> <span class="kd">static</span> <span class="kt">int</span> <span class="nf">addNum</span><span class="o">(</span><span class="kt">int</span> <span class="n">num1</span><span class="o">,</span> <span class="kt">int</span> <span class="n">num2</span><span class="o">)</span> <span class="o">{</span> <span class="c1">// 왜 static이라고 정의했는지는 나중에 설명 여기서는 함수의 기능에 대해서만 얘기한다.</span>
		<span class="kt">int</span> <span class="n">result</span><span class="o">;</span>
		<span class="n">result</span> <span class="o">=</span> <span class="n">num1</span> <span class="o">+</span> <span class="n">num2</span><span class="o">;</span>
		<span class="k">return</span> <span class="n">result</span><span class="o">;</span>
	<span class="o">}</span>

	<span class="c1">// 반환값이 없을경우</span>
	<span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">sayHello</span><span class="o">(</span><span class="nc">String</span> <span class="n">greeting</span><span class="o">)</span> <span class="o">{</span>
		<span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">greeting</span><span class="o">);</span>
	<span class="o">}</span>

	<span class="c1">// 매개변수 필요없는 경우</span>
	<span class="kd">public</span> <span class="kd">static</span> <span class="kt">int</span> <span class="nf">calcSum</span><span class="o">()</span> <span class="o">{</span>
		<span class="kt">int</span> <span class="n">sum</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
		<span class="kt">int</span> <span class="n">i</span><span class="o">;</span>

		<span class="k">for</span> <span class="o">(</span><span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span> <span class="n">i</span> <span class="o">&lt;=</span> <span class="mi">100</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
			<span class="n">sum</span> <span class="o">+=</span> <span class="n">i</span><span class="o">;</span>
		<span class="o">}</span>
		<span class="k">return</span> <span class="n">sum</span><span class="o">;</span>
	<span class="o">}</span>

	<span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="nc">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
		<span class="c1">// TODO Auto-generated method stub</span>

		<span class="kt">int</span> <span class="n">n1</span> <span class="o">=</span> <span class="mi">10</span><span class="o">;</span>
		<span class="kt">int</span> <span class="n">n2</span> <span class="o">=</span> <span class="mi">20</span><span class="o">;</span>

		<span class="c1">// 함수는 호출되어야 사용가능하다.</span>
		<span class="kt">int</span> <span class="n">total</span> <span class="o">=</span> <span class="n">addNum</span><span class="o">(</span><span class="n">n1</span><span class="o">,</span> <span class="n">n2</span><span class="o">);</span> <span class="c1">// 함수호출</span>
		<span class="c1">// int로 넘어와서 int로 받았다. 반환값이 없으면 값을 받을수 없다.</span>
		
		<span class="n">sayHello</span><span class="o">(</span><span class="s">"안녕하세요"</span><span class="o">);</span>
		<span class="kt">int</span> <span class="n">num</span> <span class="o">=</span> <span class="n">calcSum</span><span class="o">();</span>

		<span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">total</span><span class="o">);</span>
		<span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">num</span><span class="o">);</span>
	<span class="o">}</span>

<span class="o">}</span>

</code></pre></div></div>

:ET